{
  "metadata": {
    "name": "SkillSync AI",
    "language_info": {
      "name": "JavaScipt",
      "version": "8.0"
    }
  },
  "jsnbversion": "v0.1",
  "cells": [
    {
      "code": "<div style=\"text-align: center; margin: -10px -20px 0 -20px; background-color: #6b70d6; padding: 40px 20px;\">\n  <h1 style=\"color: #fff; font-size: 50px; margin-bottom: 10px;\">SkillSync AI</h1>\n  <p style=\"color: #fff; font-size: 18px; margin: 0;\">\n    Match your resume to any job description using AI + JS.<br>\n    Built for Summer of Scribbling 2025 \n  </p>\n</div>\n\n<div style=\"text-align: center;background-color: #f4f4f8; padding: 30px 20px; border-radius: 12px; margin-top: 24px;\">\n  <h2 style=\"margin-bottom: 12px; color: #333;\">✅ Submission Info</h2>\n  <ul style=\"list-style: none; padding-left: 0; font-size: 16px; color: #444;\">\n    <li> Combines <strong>AI (Gemini API)</strong> + <strong>Local JS Tokenizer</strong> </li>\n    <li> Fully <strong>client-side</strong>, no backend needed</li>\n    <li> Parses resumes using <strong>pdf.js</strong> <em>(WASM-powered)</em></li>\n    <li> Visualizes match breakdown with <strong>Chart.js</strong></li>\n    <li> Tailwind CSS for UI</li>\n  </ul>\n</div>\n",
      "status": "",
      "output": "<div style=\"text-align: center; margin: -10px -20px 0 -20px; background-color: #6b70d6; padding: 40px 20px;\">\n  <h1 style=\"color: #fff; font-size: 50px; margin-bottom: 10px;\">SkillSync AI</h1>\n  <p style=\"color: #fff; font-size: 18px; margin: 0;\">\n    Match your resume to any job description using AI + JS.<br>\n    Built for Summer of Scribbling 2025 \n  </p>\n</div>\n\n<div style=\"text-align: center;background-color: #f4f4f8; padding: 30px 20px; border-radius: 12px; margin-top: 24px;\">\n  <h2 style=\"margin-bottom: 12px; color: #333;\">✅ Submission Info</h2>\n  <ul style=\"list-style: none; padding-left: 0; font-size: 16px; color: #444;\">\n    <li> Combines <strong>AI (Gemini API)</strong> + <strong>Local JS Tokenizer</strong> </li>\n    <li> Fully <strong>client-side</strong>, no backend needed</li>\n    <li> Parses resumes using <strong>pdf.js</strong> <em>(WASM-powered)</em></li>\n    <li> Visualizes match breakdown with <strong>Chart.js</strong></li>\n    <li> Tailwind CSS for UI</li>\n  </ul>\n</div>\n",
      "type": "html"
    },
    {
      "code": "<div style=\"text-align:center;margin:10px;margin-left:-20px;margin-right:-20px;\">\n   <br><h1  style=\"color:#555;font-size:30px\">Root HTML Container </h1>\n\t<p>\n     The entire app is injected inside this div \n    </p><br></div>",
      "status": "",
      "output": "<div style=\"text-align:center;margin:10px;margin-left:-20px;margin-right:-20px;\">\n   <br><h1 style=\"color:#555;font-size:30px\">Root HTML Container </h1>\n    <p>\n     The entire app is injected inside this div \n    </p><br></div>",
      "type": "html"
    },
    {
      "code": "//>html\n<div class=\"min-h-screen gradient-bg\" id=\"app\"></div>",
      "status": "[1]<br><span style=\"font-size:8px\">0ms<span></span></span>",
      "output": "\n<div class=\"min-h-screen gradient-bg\" id=\"app\">\n    <div id=\"landing\" class=\"min-h-screen flex items-center justify-center p-6\">\n        <div class=\"text-center max-w-md  mx-auto\">\n            <div class=\"glass rounded-2xl p-8 glow\">\n                <div class=\"mb-8\">\n                    <div class=\"w-20 h-20 mx-auto mb-6 glass rounded-2xl flex items-center justify-center glow\">\n                        <svg class=\"tabler-icon w-15 h-15 text-white\">\n                            <use href=\"#tabler-brain\"></use>\n                        </svg>\n                    </div>\n                    <h1 class=\"text-4xl font-bold text-white mb-4\">\n                        <span class=\"text-4xl text-transparent bg-clip-text bg-gradient-to-r from-blue-200 to-purple-200\">SkillSync AI</span>\n                    </h1>\n                    <p class=\"text-[16px] text-blue-100 mb-6\">\n                        Instantly analyze how well your resume matches any job description with AI-powered insights\n                    </p>\n                </div>\n                \n                <button onclick=\"showStep1()\" class=\"border-none group bg-white text-indigo-600 px-6 py-4 rounded-xl font-semibold text-[16px] hover:bg-blue-50 transition-all duration-300 glow-green hover:scale-105 flex items-center gap-3 mx-auto\">\n                    <svg class=\"tabler-icon\">\n                        <use href=\"#tabler-rocket\"></use>\n                    </svg>\n                    Get Started\n                    <svg class=\"tabler-icon group-hover:translate-x-1 transition-transform\">\n                        <use href=\"#tabler-arrow-right\"></use>\n                    </svg>\n                </button>\n            </div>\n        </div>\n    </div>\n\n    <div id=\"step1\" class=\"hidden min-h-screen flex items-center justify-center p-6\">\n        <div class=\"max-w-2xl mx-auto w-full\">\n            <div class=\"glass rounded-3xl p-8 glow fade-in\">\n                <div class=\"text-center mb-8\">\n                    <div class=\"w-16 h-16 mx-auto mb-4 glass rounded-2xl flex items-center justify-center\">\n                        <svg class=\"tabler-icon w-8 h-8 text-white\">\n                            <use href=\"#tabler-file-text\"></use>\n                        </svg>\n                    </div>\n                    <h2 class=\"text-3xl font-bold text-white mb-2\">Step 1: Job Description</h2>\n                    <p class=\"text-blue-100\">Paste the job description you want to match against</p>\n                </div>\n                \n                <div class=\"space-y-6\">\n                    <div>\n                        <label class=\"block text-white font-medium mb-3\">Job Description</label>\n                        <textarea id=\"jobDescription\" placeholder=\"Paste the complete job description here...\" class=\"w-full h-48 p-4 rounded-2xl text-sm glass text-white placeholder-blue-200 border-0 focus:ring-2 focus:ring-blue-400 resize-none\"></textarea>\n                    </div>\n                    \n                    <div class=\"flex gap-4\">\n                        <button onclick=\"showLanding()\" class=\"flex-1 glass text-white px-6 py-3 rounded-2xl font-medium hover:bg-white/20 transition-all duration-300 flex items-center justify-center gap-2\">\n                            <svg class=\"tabler-icon\">\n                                <use href=\"#tabler-arrow-left\"></use>\n                            </svg>\n                            Back\n                        </button>\n                        <button onclick=\"showStep2()\" class=\"border-none flex-1 bg-gradient-to-r from-blue-500 to-purple-600 text-white px-6 py-3 rounded-2xl font-medium hover:from-blue-600 hover:to-purple-700 transition-all duration-300 glow flex items-center justify-center gap-2\">\n                            Next Step\n                            <svg class=\"tabler-icon\">\n                                <use href=\"#tabler-arrow-right\"></use>\n                            </svg>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n\n    <div id=\"step2\" class=\"hidden min-h-screen flex items-center justify-center p-6\">\n        <div class=\"max-w-2xl mx-auto w-full\">\n            <div class=\"glass rounded-3xl p-8 glow fade-in\">\n                <div class=\"text-center mb-8\">\n                    <div class=\"w-16 h-16 mx-auto mb-4 glass rounded-2xl flex items-center justify-center\">\n                        <svg class=\"tabler-icon w-8 h-8 text-white\">\n                            <use href=\"#tabler-upload\"></use>\n                        </svg>\n                    </div>\n                    <h2 class=\"text-3xl font-bold text-white mb-2\">Step 2: Upload Resume</h2>\n                    <p class=\"text-blue-100\">Upload your resume file for AI analysis</p>\n                </div>\n                \n                <div class=\"space-y-6\">\n                    <div class=\"border-2 border-dashed border-blue-300 rounded-2xl p-8 text-center glass hover:bg-white/10 transition-all duration-300\">\n                        <svg class=\"tabler-icon w-12 h-12 text-blue-200 mx-auto mb-4\">\n                            <use href=\"#tabler-cloud-upload\"></use>\n                        </svg>\n                        <p class=\"text-white font-medium mb-2\">Drop your resume here or click to browse</p>\n                        <p class=\"text-blue-200 text-sm\">Supports PDF, DOC, DOCX files</p>\n                        <input type=\"file\" id=\"resumeFile\" accept=\".pdf,.doc,.docx\" class=\"hidden\">\n                        <button onclick=\"document.getElementById('resumeFile').click()\" class=\"mt-4 border-none bg-white/20 text-white px-6 py-2 rounded-xl hover:bg-white/30 transition-all duration-300\">\n                            Choose File\n                        </button>\n                    </div>\n                    \n                    <div id=\"fileInfo\" class=\"hidden glass rounded-2xl p-4\">\n                        <div class=\"flex items-center gap-3\">\n                            <svg class=\"tabler-icon text-green-400\">\n                                <use href=\"#tabler-check\"></use>\n                            </svg>\n                            <span class=\"text-white font-medium\" id=\"fileName\"></span>\n                        </div>\n                    </div>\n                    \n                    <div class=\"flex gap-4\">\n                        <button onclick=\"showStep1()\" class=\"flex-1 glass text-white px-6 py-3 rounded-2xl font-medium hover:bg-white/20 transition-all duration-300 flex items-center justify-center gap-2\">\n                            <svg class=\"tabler-icon\">\n                                <use href=\"#tabler-arrow-left\"></use>\n                            </svg>\n                            Back\n                        </button>\n                        <button onclick=\"analyzeMatch()\" id=\"analyzeBtn\" class=\"flex-1 border-none bg-gradient-to-r from-green-500 to-blue-600 text-white px-6 py-3 rounded-2xl font-medium hover:from-green-600 hover:to-blue-700 transition-all duration-300 glow-green flex items-center justify-center gap-2\">\n                            <svg class=\"tabler-icon\">\n                                <use href=\"#tabler-brain\"></use>\n                            </svg>\n                            Analyze Match\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n\n    <div id=\"results\" class=\"hidden min-h-screen flex items-center justify-center p-6\">\n        <div class=\"max-w-4xl mx-auto w-full\">\n            <div class=\"glass rounded-3xl p-8 glow fade-in\">\n                <div class=\"text-center mb-8\">\n                    <h2 class=\"text-3xl font-bold text-white mb-2\">Match Analysis Results</h2>\n                    <p class=\"text-blue-100\">Here's how well your resume matches the job description</p>\n                </div>\n                \n                <div class=\"grid md:grid-cols-3 gap-6 mb-8\">\n                  <!-- Match Percentage -->\n\t<div class=\"gradient-card rounded-2xl p-6 text-center\">\n  <div class=\"relative w-32 h-32 mx-auto mb-4\">\n    <svg class=\"progress-ring w-32 h-32 absolute top-0 left-0\" viewBox=\"0 0 128 128\">\n      <circle cx=\"64\" cy=\"64\" r=\"56\" stroke=\"rgba(255,255,255,0.2)\" stroke-width=\"8\" fill=\"none\"></circle>\n      <circle id=\"progressCircle\" cx=\"64\" cy=\"64\" r=\"56\" stroke=\"#10b981\" stroke-width=\"8\" fill=\"none\" stroke-dasharray=\"351.86\" stroke-dashoffset=\"123.15\" class=\"progress-ring-circle\"></circle>\n    </svg>\n    <div class=\"absolute inset-0 flex flex-col items-center justify-center space-y-1\">\n      <span id=\"matchPercentage\" class=\"text-2xl font-extrabold text-white leading-tight\">70%</span>\n      <span class=\"text-sm text-white font-medium leading-none\">Match Score</span>\n    </div>\n  </div>\n</div>\n\n                <div id=\"chartModal\" class=\"fixed inset-0 bg-black/60 flex items-center justify-center z-50 hidden\">\n  <div class=\"bg-white rounded-2xl p-6 max-w-md w-full relative\">\n    <button onclick=\"closeChartModal()\" class=\"absolute top-2 right-2 text-gray-600 hover:text-black text-xl font-bold\">×</button>\n    <h3 class=\"text-xl font-semibold mb-4 text-center\">Resume vs JD Keywords</h3>\n    <canvas id=\"simpleChart\" class=\"w-full h-64\"></canvas>\n  </div>\n</div>\n\n                    \n                    <!-- Missing Keywords -->\n                    <div class=\"gradient-card rounded-2xl p-6\">\n                        <div class=\"flex items-center gap-3 mb-4\">\n                            <svg class=\"tabler-icon text-red-400\">\n                                <use href=\"#tabler-alert-circle\"></use>\n                            </svg>\n                            <h3 class=\"text-white font-semibold\">Missing Keywords</h3>\n                        </div>\n                        <div class=\"space-y-2\" id=\"missingKeywords\">\n                            <span class=\"inline-block bg-red-500/20 text-red-200 px-3 py-1 rounded-full text-sm\">React</span>\n                            <span class=\"inline-block bg-red-500/20 text-red-200 px-3 py-1 rounded-full text-sm\">TypeScript</span>\n                            <span class=\"inline-block bg-red-500/20 text-red-200 px-3 py-1 rounded-full text-sm\">AWS</span>\n                        </div>\n                    </div>\n                    \n                    <!-- Strengths -->\n                    <div class=\"gradient-card rounded-2xl p-6\">\n                        <div class=\"flex items-center gap-3 mb-4\">\n                            <svg class=\"tabler-icon text-green-400\">\n                                <use href=\"#tabler-check-circle\"></use>\n                            </svg>\n                            <h3 class=\"text-white font-semibold\">Strengths</h3>\n                        </div>\n                        <div class=\"space-y-2\" id=\"strengths\">\n                            <span class=\"inline-block bg-green-500/20 text-green-200 px-3 py-1 rounded-full text-sm\">JavaScript</span>\n                            <span class=\"inline-block bg-green-500/20 text-green-200 px-3 py-1 rounded-full text-sm\">Node.js</span>\n                            <span class=\"inline-block bg-green-500/20 text-green-200 px-3 py-1 rounded-full text-sm\">Git</span>\n                        </div>\n                    </div>\n                </div>\n                \n                <!-- Feedback Summary -->\n                <div class=\"gradient-card rounded-2xl p-6 mb-6\">\n                    <div class=\"flex items-center gap-3 mb-4\">\n                        <svg class=\"tabler-icon text-blue-400\">\n                            <use href=\"#tabler-message-circle\"></use>\n                        </svg>\n                        <h3 class=\"text-white font-semibold\">AI Feedback Summary</h3>\n                    </div>\n                    <p class=\"text-blue-100 leading-relaxed\" id=\"feedbackSummary\">\n                        Your resume shows strong technical skills in JavaScript and Node.js, which align well with the job requirements. However, you're missing some key technologies like React and TypeScript that are specifically mentioned in the job description. Consider highlighting any related experience or adding these skills through projects or training.\n                    </p>\n                </div>\n                \n                <div class=\"flex gap-4\">\n                    <button onclick=\"showStep2()\" class=\"flex-1 glass text-white px-6 py-3 rounded-2xl font-medium hover:bg-white/20 transition-all duration-300 flex items-center justify-center gap-2\">\n                        <svg class=\"tabler-icon\">\n                            <use href=\"#tabler-arrow-left\"></use>\n                        </svg>\n                        Back\n                    </button>\n\t\t\t\t\t<button onclick=\"openChartModal()\" class=\"flex-1 glass text-white px-6 py-3 rounded-2xl font-medium hover:bg-white/20 transition-all duration-300 flex items-center justify-center\">\n  Visualize\n</button>\n\n                    <button onclick=\"showTailoring()\" class=\"flex-1 border-none bg-gradient-to-r from-purple-500 to-pink-600 text-white px-6 py-3 rounded-2xl font-medium hover:from-purple-600 hover:to-pink-700 transition-all duration-300 glow flex items-center justify-center gap-2\">\n                        <svg class=\"tabler-icon\">\n                            <use href=\"#tabler-edit\"></use>\n                        </svg>\n                        Tailor My Resume\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n\n    <div id=\"tailoring\" class=\"hidden min-h-screen flex items-center justify-center p-6\">\n        <div class=\"max-w-4xl mx-auto w-full\">\n            <div class=\"glass rounded-3xl p-8 glow fade-in\">\n                <div class=\"text-center mb-8\">\n                    <div class=\"w-16 h-16 mx-auto mb-4 glass rounded-2xl flex items-center justify-center\">\n                        <svg class=\"tabler-icon w-8 h-8 text-white\">\n                            <use href=\"#tabler-wand\"></use>\n                        </svg>\n                    </div>\n                    <h2 class=\"text-3xl font-bold text-white mb-2\">Resume Tailoring Suggestions</h2>\n                    <p class=\"text-blue-100\">AI-generated improvements to boost your match score</p>\n                </div>\n                \n                <div class=\"space-y-6\">\n                    <div class=\"gradient-card rounded-2xl p-6\">\n                        <label class=\"block text-white font-medium mb-3\">Suggested Resume Edits</label>\n                       <textarea id=\"tailoringSuggestions\" readonly=\"\" class=\"w-full h-64 p-4 rounded-2xl glass text-white border-0 resize-none\">Loading suggestions from AI...</textarea>\n                    </div>\n                    \n                    <div class=\"grid md:grid-cols-3 gap-4\">\n                        <button onclick=\"showResults()\" class=\"glass text-white px-6 py-3 rounded-2xl font-medium hover:bg-white/20 transition-all duration-300 flex items-center justify-center gap-2\">\n                            <svg class=\"tabler-icon\">\n                                <use href=\"#tabler-arrow-left\"></use>\n                            </svg>\n                            Back to Results\n                        </button>\n                        <button onclick=\"restart()\" class=\"border-none bg-gradient-to-r from-green-500 to-teal-600 text-white px-6 py-3 rounded-2xl font-medium hover:from-green-600 hover:to-teal-700 transition-all duration-300 glow-green flex items-center justify-center gap-2\">\n                            <svg class=\"tabler-icon\">\n                                <use href=\"#tabler-refresh\"></use>\n                            </svg>\n                            Start Over\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</div> <br>",
      "type": "code"
    },
    {
      "code": "<div style=\"text-align:center;margin:10px;margin-left:-20px;margin-right:-20px;\">\n<h1  style=\"color:#555;font-size:30px\"> Load Required Libraries & Styles </h1> \n\n<p>  TailwindCSS for styling, pdf.js for PDF parsing, Chart.js for visualizations, and Tabler icons for SVG UI.\n</p>\n</div>",
      "status": "",
      "output": "<div style=\"text-align:center;margin:10px;margin-left:-20px;margin-right:-20px;\">\n<h1 style=\"color:#555;font-size:30px\"> Load Required Libraries &amp; Styles </h1> \n\n<p>  TailwindCSS for styling, pdf.js for PDF parsing, Chart.js for visualizations, and Tabler icons for SVG UI.\n</p>\n</div>",
      "type": "html"
    },
    {
      "code": "scrib.loadScript(\"https://cdn.tailwindcss.com\")\nscrib.loadScript(\"https://cdn.jsdelivr.net/npm/pdfjs-dist@3.11.174/build/pdf.min.js\")\nscrib.loadScript(\"https://cdn.jsdelivr.net/npm/chart.js\")\nscrib.loadCSS(\"https://cdn.jsdelivr.net/npm/@tabler/icons@latest/icons-sprite.svg\")",
      "status": "[2]<br><span style=\"font-size:8px\">0ms<span></span></span>",
      "output": "",
      "type": "code"
    },
    {
      "code": "<div style=\"text-align:center;margin:10px;margin-left:-20px;margin-right:-20px;\">\n<h1  style=\"color:#555;font-size:30px\"> Core Tokenizer & Match Logic </h1> \n\n<p>  Tokenizes resume and job description text, filters noise, and calculates match score, matched, and missing keywords.\n</p>\n</div>",
      "status": "",
      "output": "<div style=\"text-align:center;margin:10px;margin-left:-20px;margin-right:-20px;\">\n<h1 style=\"color:#555;font-size:30px\"> Core Tokenizer &amp; Match Logic </h1> \n\n<p>  Tokenizes resume and job description text, filters noise, and calculates match score, matched, and missing keywords.\n</p>\n</div>",
      "type": "html"
    },
    {
      "code": "let extractedText = \"\";\nlet jobDescription = \"\";\n\nfunction tokenize(text) {\n  return text.toLowerCase()\n    .replace(/[^a-z0-9\\s]/gi, \"\")\n    .split(/\\s+/)\n    .filter(word => word.length > 5 && ![\"and\", \"the\", \"with\", \"for\", \"from\"].includes(word));\n}\n\nfunction calculateMatch(resumeTokens, jdTokens) {\n  const resumeSet = new Set(resumeTokens);\n  const jdSet = new Set(jdTokens);\n  const missing = [...jdSet].filter(word => !resumeSet.has(word));\n  const matched = [...jdSet].filter(word => resumeSet.has(word));\n  const percent = Math.round((matched.length / jdSet.size) * 100);\n  return { percent, matched, missing };\n}\n",
      "status": "[3]<br><span style=\"font-size:8px\">0ms<span></span></span>",
      "output": "",
      "type": "code"
    },
    {
      "code": "<div style=\"text-align:center;margin:10px;margin-left:-20px;margin-right:-20px;\">\n<h1  style=\"color:#555;font-size:30px\"> Local Fallback Matching (If AI API Fails) </h1> \n\n<p> Computes overlap and suggests missing keywords with simple string-based logic. Used as fallback if AI call fails.\n</p>\n</div>",
      "status": "",
      "output": "<div style=\"text-align:center;margin:10px;margin-left:-20px;margin-right:-20px;\">\n<h1 style=\"color:#555;font-size:30px\"> Local Fallback Matching (If AI API Fails) </h1> \n\n<p> Computes overlap and suggests missing keywords with simple string-based logic. Used as fallback if AI call fails.\n</p>\n</div>",
      "type": "html"
    },
    {
      "code": "function localFallbackMatch(resumeText, jdText) {\n  const resumeTokens = tokenize(resumeText);\n  const jdTokens = tokenize(jdText);\n  const { percent, matched, missing } = calculateMatch(resumeTokens, jdTokens);\n\n  const feedback = `Your resume overlaps with ${matched.length} out of ${jdTokens.length} keywords. Consider adding: ${missing.slice(0, 5).join(\", \")}.`;\n\n  return {\n    score: percent,\n    strengths: matched,\n    missing,\n    feedback\n  };\n}\n",
      "status": "[4]<br><span style=\"font-size:8px\">0ms<span></span></span>",
      "output": "",
      "type": "code"
    },
    {
      "code": "<div style=\"text-align:center;margin:10px;margin-left:-20px;margin-right:-20px;\">\n<h1  style=\"color:#555;font-size:30px\">Update UI with Match Results </h1> \n\n<p>Updates the DOM with score %, matched/missing keywords, feedback summary, and stores values for chart rendering.\n</p>\n</div>",
      "status": "",
      "output": "<div style=\"text-align:center;margin:10px;margin-left:-20px;margin-right:-20px;\">\n<h1 style=\"color:#555;font-size:30px\">Update UI with Match Results </h1> \n\n<p>Updates the DOM with score %, matched/missing keywords, feedback summary, and stores values for chart rendering.\n</p>\n</div>",
      "type": "html"
    },
    {
      "code": "function updateUIWithResults(score, matched, missing, feedbackText) {\n  document.getElementById(\"matchPercentage\").textContent = `${score}%`;\n\n  document.getElementById(\"strengths\").innerHTML = matched.map(word => \n    `<span class='inline-block bg-green-500/20 text-green-200 px-3 py-1 rounded-full text-sm'>${word}</span>`\n  ).join(\" \");\n  \n  document.getElementById(\"missingKeywords\").innerHTML = missing.map(word => \n    `<span class='inline-block bg-red-500/20 text-red-200 px-3 py-1 rounded-full text-sm'>${word}</span>`\n  ).join(\" \");\n\n  document.getElementById(\"feedbackSummary\").textContent = feedbackText;\n\n  window.latestMatchedCount = matched.length;\n  window.latestMissingCount = missing.length;\n}\n",
      "status": "[5]<br><span style=\"font-size:8px\">0ms<span></span></span>",
      "output": "",
      "type": "code"
    },
    {
      "code": "<div style=\"text-align:center;margin:10px;margin-left:-20px;margin-right:-20px;\">\n<h1  style=\"color:#555;font-size:30px\">Custom Styles</h1> \n\n<p> Defines glassmorphism, gradients, animations, and utility styles for consistent UI across sections.\n</p>\n</div>",
      "status": "",
      "output": "<div style=\"text-align:center;margin:10px;margin-left:-20px;margin-right:-20px;\">\n<h1 style=\"color:#555;font-size:30px\">Custom Styles</h1> \n\n<p> Defines glassmorphism, gradients, animations, and utility styles for consistent UI across sections.\n</p>\n</div>",
      "type": "html"
    },
    {
      "code": "//>css\n@import url(\"https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap\");\n\n* {\n  font-family: \"Inter\", sans-serif;\n}\n\n.glass {\n  background: rgba(255, 255, 255, 0.1);\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n}\n\n.glow {\n  box-shadow: 0 0 20px rgba(99, 102, 241, 0.3);\n}\n\n.glow-green {\n  box-shadow: 0 0 20px rgba(34, 197, 94, 0.3);\n}\n\n.gradient-bg {\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n}\n\n.gradient-card {\n  background: linear-gradient(\n    135deg,\n    rgba(255, 255, 255, 0.1) 0%,\n    rgba(255, 255, 255, 0.05) 100%\n  );\n}\n\n.tabler-icon {\n  width: 20px;\n  height: 20px;\n  stroke: currentColor;\n  stroke-width: 2;\n  fill: none;\n}\n\n.hidden {\n  display: none;\n}\n\n.fade-in {\n  animation: fadeIn 0.5s ease-in;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.progress-ring {\n  transform: rotate(-90deg);\n}\n\n.progress-ring-circle {\n  transition: stroke-dasharray 0.35s;\n  transform-origin: 50% 50%;\n}\n",
      "status": "[6]<br><span style=\"font-size:8px\">0ms<span></span></span>",
      "output": "<style>\n@import url(\"https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap\");\n\n* {\n  font-family: \"Inter\", sans-serif;\n}\n\n.glass {\n  background: rgba(255, 255, 255, 0.1);\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.2);\n}\n\n.glow {\n  box-shadow: 0 0 20px rgba(99, 102, 241, 0.3);\n}\n\n.glow-green {\n  box-shadow: 0 0 20px rgba(34, 197, 94, 0.3);\n}\n\n.gradient-bg {\n  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n}\n\n.gradient-card {\n  background: linear-gradient(\n    135deg,\n    rgba(255, 255, 255, 0.1) 0%,\n    rgba(255, 255, 255, 0.05) 100%\n  );\n}\n\n.tabler-icon {\n  width: 20px;\n  height: 20px;\n  stroke: currentColor;\n  stroke-width: 2;\n  fill: none;\n}\n\n.hidden {\n  display: none;\n}\n\n.fade-in {\n  animation: fadeIn 0.5s ease-in;\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n.progress-ring {\n  transform: rotate(-90deg);\n}\n\n.progress-ring-circle {\n  transition: stroke-dasharray 0.35s;\n  transform-origin: 50% 50%;\n}\n</style> <br>",
      "type": "code"
    },
    {
      "code": "<div style=\"text-align:center;margin:10px;margin-left:-20px;margin-right:-20px;\">\n<h1  style=\"color:#555;font-size:30px\">Tabler Icon Definitions</h1> \n\n<p> SVG symbols for all tabler icons used across the app: navigation, status, UI elements\n</p>\n</div>",
      "status": "",
      "output": "<div style=\"text-align:center;margin:10px;margin-left:-20px;margin-right:-20px;\">\n<h1 style=\"color:#555;font-size:30px\">Tabler Icon Definitions</h1> \n\n<p> SVG symbols for all tabler icons used across the app: navigation, status, UI elements\n</p>\n</div>",
      "type": "html"
    },
    {
      "code": "//>html\n<svg style=\"display: none;\">\n        <symbol id=\"tabler-brain\" viewBox=\"0 0 24 24\">\n            <path d=\"M15.5 13a3.5 3.5 0 0 0 -3.5 3.5v1a3.5 3.5 0 0 0 3.5 3.5h1a3.5 3.5 0 0 0 3.5 -3.5v-1a3.5 3.5 0 0 0 -3.5 -3.5h-1z\" />\n            <path d=\"M8.5 13a3.5 3.5 0 0 1 3.5 3.5v1a3.5 3.5 0 0 1 -3.5 3.5h-1a3.5 3.5 0 0 1 -3.5 -3.5v-1a3.5 3.5 0 0 1 3.5 -3.5h1z\" />\n            <path d=\"M17.5 16a3.5 3.5 0 0 0 0 -7h-.5\" />\n            <path d=\"M19 9a3.5 3.5 0 0 0 -3.5 -3.5c-1.925 0 -3.5 1.575 -3.5 3.5\" />\n            <path d=\"M6.5 16a3.5 3.5 0 0 1 0 -7h.5\" />\n            <path d=\"M5 9a3.5 3.5 0 0 1 3.5 -3.5c1.925 0 3.5 1.575 3.5 3.5\" />\n        </symbol>\n        <symbol id=\"tabler-rocket\" viewBox=\"0 0 24 24\">\n            <path d=\"M4 13a8 8 0 0 1 7 7a6 6 0 0 0 3 -5a9 9 0 0 0 6 -8a3 3 0 0 0 -3 -3a9 9 0 0 0 -8 6a6 6 0 0 0 -5 3\" />\n            <path d=\"M7 14a6 6 0 0 0 -3 6a6 6 0 0 0 6 -3\" />\n            <circle cx=\"15\" cy=\"9\" r=\"1\" />\n        </symbol>\n        <symbol id=\"tabler-arrow-right\" viewBox=\"0 0 24 24\">\n            <path d=\"M5 12l14 0\" />\n            <path d=\"M13 18l6 -6\" />\n            <path d=\"M13 6l6 6\" />\n        </symbol>\n        <symbol id=\"tabler-arrow-left\" viewBox=\"0 0 24 24\">\n            <path d=\"M5 12l14 0\" />\n            <path d=\"M5 12l6 6\" />\n            <path d=\"M5 12l6 -6\" />\n        </symbol>\n        <symbol id=\"tabler-file-text\" viewBox=\"0 0 24 24\">\n            <path d=\"M14 3v4a1 1 0 0 0 1 1h4\" />\n            <path d=\"M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z\" />\n            <path d=\"M9 9l1 0\" />\n            <path d=\"M9 13l6 0\" />\n            <path d=\"M9 17l6 0\" />\n        </symbol>\n        <symbol id=\"tabler-upload\" viewBox=\"0 0 24 24\">\n            <path d=\"M14 3v4a1 1 0 0 0 1 1h4\" />\n            <path d=\"M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z\" />\n            <path d=\"M12 11v6\" />\n            <path d=\"M9.5 13.5l2.5 -2.5l2.5 2.5\" />\n        </symbol>\n        <symbol id=\"tabler-cloud-upload\" viewBox=\"0 0 24 24\">\n            <path d=\"M7 18a4.6 4.4 0 0 1 0 -9a5 4.5 0 0 1 11 2h1a3.5 3.5 0 0 1 0 7h-1\" />\n            <path d=\"M9 15l3 -3l3 3\" />\n            <path d=\"M12 12l0 9\" />\n        </symbol>\n        <symbol id=\"tabler-check\" viewBox=\"0 0 24 24\">\n            <path d=\"M5 12l5 5l10 -10\" />\n        </symbol>\n        <symbol id=\"tabler-alert-circle\" viewBox=\"0 0 24 24\">\n            <circle cx=\"12\" cy=\"12\" r=\"9\" />\n            <path d=\"M12 8l0 4\" />\n            <path d=\"M12 16l.01 0\" />\n        </symbol>\n        <symbol id=\"tabler-check-circle\" viewBox=\"0 0 24 24\">\n            <circle cx=\"12\" cy=\"12\" r=\"9\" />\n            <path d=\"M9 12l2 2l4 -4\" />\n        </symbol>\n        <symbol id=\"tabler-message-circle\" viewBox=\"0 0 24 24\">\n            <path d=\"M3 20l1.3 -3.9c-2.324 -3.437 -1.426 -7.872 2.1 -10.374c3.526 -2.501 8.59 -2.296 11.845 .48c3.255 2.777 3.695 7.266 1.029 10.501c-2.666 3.235 -7.615 4.215 -11.574 2.293l-4.7 1\" />\n        </symbol>\n        <symbol id=\"tabler-edit\" viewBox=\"0 0 24 24\">\n            <path d=\"M7 7h-1a2 2 0 0 0 -2 2v9a2 2 0 0 0 2 2h9a2 2 0 0 0 2 -2v-1\" />\n            <path d=\"M20.385 6.585a2.1 2.1 0 0 0 -2.97 -2.97l-8.415 8.385v3h3l8.385 -8.415z\" />\n            <path d=\"M16 5l3 3\" />\n        </symbol>\n        <symbol id=\"tabler-wand\" viewBox=\"0 0 24 24\">\n            <path d=\"M6 21l15 -15l-3 -3l-15 15l3 3\" />\n            <path d=\"M15 6l3 3\" />\n            <path d=\"M9 3a2 2 0 0 0 2 2a2 2 0 0 0 -2 2a2 2 0 0 0 -2 -2a2 2 0 0 0 2 -2\" />\n            <path d=\"M19 13a2 2 0 0 0 2 2a2 2 0 0 0 -2 2a2 2 0 0 0 -2 -2a2 2 0 0 0 2 -2\" />\n        </symbol>\n        <symbol id=\"tabler-download\" viewBox=\"0 0 24 24\">\n            <path d=\"M4 17v2a2 2 0 0 0 2 2h12a2 2 0 0 0 2 -2v-2\" />\n            <path d=\"M7 11l5 5l5 -5\" />\n            <path d=\"M12 4l0 12\" />\n        </symbol>\n        <symbol id=\"tabler-refresh\" viewBox=\"0 0 24 24\">\n            <path d=\"M20 11a8.1 8.1 0 0 0 -15.5 -2m-.5 -4v4h4\" />\n            <path d=\"M4 13a8.1 8.1 0 0 0 15.5 2m.5 4v-4h-4\" />\n        </symbol>\n    </svg>",
      "status": "[7]<br><span style=\"font-size:8px\">1ms<span></span></span>",
      "output": "\n<svg style=\"display: none;\">\n        <symbol id=\"tabler-brain\" viewBox=\"0 0 24 24\">\n            <path d=\"M15.5 13a3.5 3.5 0 0 0 -3.5 3.5v1a3.5 3.5 0 0 0 3.5 3.5h1a3.5 3.5 0 0 0 3.5 -3.5v-1a3.5 3.5 0 0 0 -3.5 -3.5h-1z\"></path>\n            <path d=\"M8.5 13a3.5 3.5 0 0 1 3.5 3.5v1a3.5 3.5 0 0 1 -3.5 3.5h-1a3.5 3.5 0 0 1 -3.5 -3.5v-1a3.5 3.5 0 0 1 3.5 -3.5h1z\"></path>\n            <path d=\"M17.5 16a3.5 3.5 0 0 0 0 -7h-.5\"></path>\n            <path d=\"M19 9a3.5 3.5 0 0 0 -3.5 -3.5c-1.925 0 -3.5 1.575 -3.5 3.5\"></path>\n            <path d=\"M6.5 16a3.5 3.5 0 0 1 0 -7h.5\"></path>\n            <path d=\"M5 9a3.5 3.5 0 0 1 3.5 -3.5c1.925 0 3.5 1.575 3.5 3.5\"></path>\n        </symbol>\n        <symbol id=\"tabler-rocket\" viewBox=\"0 0 24 24\">\n            <path d=\"M4 13a8 8 0 0 1 7 7a6 6 0 0 0 3 -5a9 9 0 0 0 6 -8a3 3 0 0 0 -3 -3a9 9 0 0 0 -8 6a6 6 0 0 0 -5 3\"></path>\n            <path d=\"M7 14a6 6 0 0 0 -3 6a6 6 0 0 0 6 -3\"></path>\n            <circle cx=\"15\" cy=\"9\" r=\"1\"></circle>\n        </symbol>\n        <symbol id=\"tabler-arrow-right\" viewBox=\"0 0 24 24\">\n            <path d=\"M5 12l14 0\"></path>\n            <path d=\"M13 18l6 -6\"></path>\n            <path d=\"M13 6l6 6\"></path>\n        </symbol>\n        <symbol id=\"tabler-arrow-left\" viewBox=\"0 0 24 24\">\n            <path d=\"M5 12l14 0\"></path>\n            <path d=\"M5 12l6 6\"></path>\n            <path d=\"M5 12l6 -6\"></path>\n        </symbol>\n        <symbol id=\"tabler-file-text\" viewBox=\"0 0 24 24\">\n            <path d=\"M14 3v4a1 1 0 0 0 1 1h4\"></path>\n            <path d=\"M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z\"></path>\n            <path d=\"M9 9l1 0\"></path>\n            <path d=\"M9 13l6 0\"></path>\n            <path d=\"M9 17l6 0\"></path>\n        </symbol>\n        <symbol id=\"tabler-upload\" viewBox=\"0 0 24 24\">\n            <path d=\"M14 3v4a1 1 0 0 0 1 1h4\"></path>\n            <path d=\"M17 21h-10a2 2 0 0 1 -2 -2v-14a2 2 0 0 1 2 -2h7l5 5v11a2 2 0 0 1 -2 2z\"></path>\n            <path d=\"M12 11v6\"></path>\n            <path d=\"M9.5 13.5l2.5 -2.5l2.5 2.5\"></path>\n        </symbol>\n        <symbol id=\"tabler-cloud-upload\" viewBox=\"0 0 24 24\">\n            <path d=\"M7 18a4.6 4.4 0 0 1 0 -9a5 4.5 0 0 1 11 2h1a3.5 3.5 0 0 1 0 7h-1\"></path>\n            <path d=\"M9 15l3 -3l3 3\"></path>\n            <path d=\"M12 12l0 9\"></path>\n        </symbol>\n        <symbol id=\"tabler-check\" viewBox=\"0 0 24 24\">\n            <path d=\"M5 12l5 5l10 -10\"></path>\n        </symbol>\n        <symbol id=\"tabler-alert-circle\" viewBox=\"0 0 24 24\">\n            <circle cx=\"12\" cy=\"12\" r=\"9\"></circle>\n            <path d=\"M12 8l0 4\"></path>\n            <path d=\"M12 16l.01 0\"></path>\n        </symbol>\n        <symbol id=\"tabler-check-circle\" viewBox=\"0 0 24 24\">\n            <circle cx=\"12\" cy=\"12\" r=\"9\"></circle>\n            <path d=\"M9 12l2 2l4 -4\"></path>\n        </symbol>\n        <symbol id=\"tabler-message-circle\" viewBox=\"0 0 24 24\">\n            <path d=\"M3 20l1.3 -3.9c-2.324 -3.437 -1.426 -7.872 2.1 -10.374c3.526 -2.501 8.59 -2.296 11.845 .48c3.255 2.777 3.695 7.266 1.029 10.501c-2.666 3.235 -7.615 4.215 -11.574 2.293l-4.7 1\"></path>\n        </symbol>\n        <symbol id=\"tabler-edit\" viewBox=\"0 0 24 24\">\n            <path d=\"M7 7h-1a2 2 0 0 0 -2 2v9a2 2 0 0 0 2 2h9a2 2 0 0 0 2 -2v-1\"></path>\n            <path d=\"M20.385 6.585a2.1 2.1 0 0 0 -2.97 -2.97l-8.415 8.385v3h3l8.385 -8.415z\"></path>\n            <path d=\"M16 5l3 3\"></path>\n        </symbol>\n        <symbol id=\"tabler-wand\" viewBox=\"0 0 24 24\">\n            <path d=\"M6 21l15 -15l-3 -3l-15 15l3 3\"></path>\n            <path d=\"M15 6l3 3\"></path>\n            <path d=\"M9 3a2 2 0 0 0 2 2a2 2 0 0 0 -2 2a2 2 0 0 0 -2 -2a2 2 0 0 0 2 -2\"></path>\n            <path d=\"M19 13a2 2 0 0 0 2 2a2 2 0 0 0 -2 2a2 2 0 0 0 -2 -2a2 2 0 0 0 2 -2\"></path>\n        </symbol>\n        <symbol id=\"tabler-download\" viewBox=\"0 0 24 24\">\n            <path d=\"M4 17v2a2 2 0 0 0 2 2h12a2 2 0 0 0 2 -2v-2\"></path>\n            <path d=\"M7 11l5 5l5 -5\"></path>\n            <path d=\"M12 4l0 12\"></path>\n        </symbol>\n        <symbol id=\"tabler-refresh\" viewBox=\"0 0 24 24\">\n            <path d=\"M20 11a8.1 8.1 0 0 0 -15.5 -2m-.5 -4v4h4\"></path>\n            <path d=\"M4 13a8.1 8.1 0 0 0 15.5 2m.5 4v-4h-4\"></path>\n        </symbol>\n    </svg> <br>",
      "type": "code"
    },
    {
      "code": "<div style=\"text-align:center;margin:10px;margin-left:-20px;margin-right:-20px;\">\n<h1  style=\"color:#555;font-size:30px\"> Landing Page Section</h1> \n\n<p> Intro screen with \"Get Started\" button to begin resume match flow.\n</p>\n</div>",
      "status": "",
      "output": "<div style=\"text-align:center;margin:10px;margin-left:-20px;margin-right:-20px;\">\n<h1 style=\"color:#555;font-size:30px\"> Landing Page Section</h1> \n\n<p> Intro screen with \"Get Started\" button to begin resume match flow.\n</p>\n</div>",
      "type": "html"
    },
    {
      "code": "const landingHTML = `\n    <div id=\"landing\" class=\"min-h-screen flex items-center justify-center p-6\">\n        <div class=\"text-center max-w-md  mx-auto\">\n            <div class=\"glass rounded-2xl p-8 glow\">\n                <div class=\"mb-8\">\n                    <div class=\"w-20 h-20 mx-auto mb-6 glass rounded-2xl flex items-center justify-center glow\">\n                        <svg class=\"tabler-icon w-15 h-15 text-white\">\n                            <use href=\"#tabler-brain\"></use>\n                        </svg>\n                    </div>\n                    <h1 class=\"text-4xl font-bold text-white mb-4\">\n                        <span class=\"text-4xl text-transparent bg-clip-text bg-gradient-to-r from-blue-200 to-purple-200\">SkillSync AI</span>\n                    </h1>\n                    <p class=\"text-[16px] text-blue-100 mb-6\">\n                        Instantly analyze how well your resume matches any job description with AI-powered insights\n                    </p>\n                </div>\n                \n                <button onclick=\"showStep1()\" class=\"border-none group bg-white text-indigo-600 px-6 py-4 rounded-xl font-semibold text-[16px] hover:bg-blue-50 transition-all duration-300 glow-green hover:scale-105 flex items-center gap-3 mx-auto\">\n                    <svg class=\"tabler-icon\">\n                        <use href=\"#tabler-rocket\"></use>\n                    </svg>\n                    Get Started\n                    <svg class=\"tabler-icon group-hover:translate-x-1 transition-transform\">\n                        <use href=\"#tabler-arrow-right\"></use>\n                    </svg>\n                </button>\n            </div>\n        </div>\n    </div>\n`;\ndocument.getElementById('app').insertAdjacentHTML('beforeend', landingHTML);",
      "status": "[8]<br><span style=\"font-size:8px\">0ms<span></span></span>",
      "output": "",
      "type": "code"
    },
    {
      "code": "<div style=\"text-align:center;margin:10px;margin-left:-20px;margin-right:-20px;\">\n<h1  style=\"color:#555;font-size:30px\">Step 1: Input Job Description</h1> \n\n<p> Textarea where user pastes the job description. Moves to Step 2 upon validation.\n</p>\n</div>",
      "status": "",
      "output": "<div style=\"text-align:center;margin:10px;margin-left:-20px;margin-right:-20px;\">\n<h1 style=\"color:#555;font-size:30px\">Step 1: Input Job Description</h1> \n\n<p> Textarea where user pastes the job description. Moves to Step 2 upon validation.\n</p>\n</div>",
      "type": "html"
    },
    {
      "code": "const step1HTML = `\n    <div id=\"step1\" class=\"hidden min-h-screen flex items-center justify-center p-6\">\n        <div class=\"max-w-2xl mx-auto w-full\">\n            <div class=\"glass rounded-3xl p-8 glow fade-in\">\n                <div class=\"text-center mb-8\">\n                    <div class=\"w-16 h-16 mx-auto mb-4 glass rounded-2xl flex items-center justify-center\">\n                        <svg class=\"tabler-icon w-8 h-8 text-white\">\n                            <use href=\"#tabler-file-text\"></use>\n                        </svg>\n                    </div>\n                    <h2 class=\"text-3xl font-bold text-white mb-2\">Step 1: Job Description</h2>\n                    <p class=\"text-blue-100\">Paste the job description you want to match against</p>\n                </div>\n                \n                <div class=\"space-y-6\">\n                    <div>\n                        <label class=\"block text-white font-medium mb-3\">Job Description</label>\n                        <textarea \n                            id=\"jobDescription\" \n                            placeholder=\"Paste the complete job description here...\"\n                            class=\"w-full h-48 p-4 rounded-2xl text-sm glass text-white placeholder-blue-200 border-0 focus:ring-2 focus:ring-blue-400 resize-none\"\n                        ></textarea>\n                    </div>\n                    \n                    <div class=\"flex gap-4\">\n                        <button onclick=\"showLanding()\" class=\"flex-1 glass text-white px-6 py-3 rounded-2xl font-medium hover:bg-white/20 transition-all duration-300 flex items-center justify-center gap-2\">\n                            <svg class=\"tabler-icon\">\n                                <use href=\"#tabler-arrow-left\"></use>\n                            </svg>\n                            Back\n                        </button>\n                        <button onclick=\"showStep2()\" class=\"border-none flex-1 bg-gradient-to-r from-blue-500 to-purple-600 text-white px-6 py-3 rounded-2xl font-medium hover:from-blue-600 hover:to-purple-700 transition-all duration-300 glow flex items-center justify-center gap-2\">\n                            Next Step\n                            <svg class=\"tabler-icon\">\n                                <use href=\"#tabler-arrow-right\"></use>\n                            </svg>\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n`;\ndocument.getElementById('app').insertAdjacentHTML('beforeend', step1HTML);",
      "status": "[9]<br><span style=\"font-size:8px\">0ms<span></span></span>",
      "output": "",
      "type": "code"
    },
    {
      "code": "<div style=\"text-align:center;margin:10px;margin-left:-20px;margin-right:-20px;\">\n<h1  style=\"color:#555;font-size:30px\"> Step 2: Upload Resume</h1> \n\n<p> User uploads resume file (PDF), shows filename confirmation, triggers analysis.\n</p>\n</div>",
      "status": "",
      "output": "<div style=\"text-align:center;margin:10px;margin-left:-20px;margin-right:-20px;\">\n<h1 style=\"color:#555;font-size:30px\"> Step 2: Upload Resume</h1> \n\n<p> User uploads resume file (PDF), shows filename confirmation, triggers analysis.\n</p>\n</div>",
      "type": "html"
    },
    {
      "code": "const step2HTML = `\n\n    <div id=\"step2\" class=\"hidden min-h-screen flex items-center justify-center p-6\">\n        <div class=\"max-w-2xl mx-auto w-full\">\n            <div class=\"glass rounded-3xl p-8 glow fade-in\">\n                <div class=\"text-center mb-8\">\n                    <div class=\"w-16 h-16 mx-auto mb-4 glass rounded-2xl flex items-center justify-center\">\n                        <svg class=\"tabler-icon w-8 h-8 text-white\">\n                            <use href=\"#tabler-upload\"></use>\n                        </svg>\n                    </div>\n                    <h2 class=\"text-3xl font-bold text-white mb-2\">Step 2: Upload Resume</h2>\n                    <p class=\"text-blue-100\">Upload your resume file for AI analysis</p>\n                </div>\n                \n                <div class=\"space-y-6\">\n                    <div class=\"border-2 border-dashed border-blue-300 rounded-2xl p-8 text-center glass hover:bg-white/10 transition-all duration-300\">\n                        <svg class=\"tabler-icon w-12 h-12 text-blue-200 mx-auto mb-4\">\n                            <use href=\"#tabler-cloud-upload\"></use>\n                        </svg>\n                        <p class=\"text-white font-medium mb-2\">Drop your resume here or click to browse</p>\n                        <p class=\"text-blue-200 text-sm\">Supports PDF, DOC, DOCX files</p>\n                        <input type=\"file\" id=\"resumeFile\" accept=\".pdf,.doc,.docx\" class=\"hidden\">\n                        <button onclick=\"document.getElementById('resumeFile').click()\" class=\"mt-4 border-none bg-white/20 text-white px-6 py-2 rounded-xl hover:bg-white/30 transition-all duration-300\">\n                            Choose File\n                        </button>\n                    </div>\n                    \n                    <div id=\"fileInfo\" class=\"hidden glass rounded-2xl p-4\">\n                        <div class=\"flex items-center gap-3\">\n                            <svg class=\"tabler-icon text-green-400\">\n                                <use href=\"#tabler-check\"></use>\n                            </svg>\n                            <span class=\"text-white font-medium\" id=\"fileName\"></span>\n                        </div>\n                    </div>\n                    \n                    <div class=\"flex gap-4\">\n                        <button onclick=\"showStep1()\" class=\"flex-1 glass text-white px-6 py-3 rounded-2xl font-medium hover:bg-white/20 transition-all duration-300 flex items-center justify-center gap-2\">\n                            <svg class=\"tabler-icon\">\n                                <use href=\"#tabler-arrow-left\"></use>\n                            </svg>\n                            Back\n                        </button>\n                        <button onclick=\"analyzeMatch()\" id=\"analyzeBtn\" class=\"flex-1 border-none bg-gradient-to-r from-green-500 to-blue-600 text-white px-6 py-3 rounded-2xl font-medium hover:from-green-600 hover:to-blue-700 transition-all duration-300 glow-green flex items-center justify-center gap-2\">\n                            <svg class=\"tabler-icon\">\n                                <use href=\"#tabler-brain\"></use>\n                            </svg>\n                            Analyze Match\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n`;\ndocument.getElementById('app').insertAdjacentHTML('beforeend', step2HTML);\n",
      "status": "[10]<br><span style=\"font-size:8px\">0ms<span></span></span>",
      "output": "",
      "type": "code"
    },
    {
      "code": "<div style=\"text-align:center;margin:10px;margin-left:-20px;margin-right:-20px;\">\n<h1  style=\"color:#555;font-size:30px\">Match Results Display</h1> \n\n<p>Shows match %, keyword tags, feedback, and button to open visualization or continue to tailoring.\n</p>\n</div>",
      "status": "",
      "output": "<div style=\"text-align:center;margin:10px;margin-left:-20px;margin-right:-20px;\">\n<h1 style=\"color:#555;font-size:30px\">Match Results Display</h1> \n\n<p>Shows match %, keyword tags, feedback, and button to open visualization or continue to tailoring.\n</p>\n</div>",
      "type": "html"
    },
    {
      "code": "const resultsHTML = `\n    <div id=\"results\" class=\"hidden min-h-screen flex items-center justify-center p-6\">\n        <div class=\"max-w-4xl mx-auto w-full\">\n            <div class=\"glass rounded-3xl p-8 glow fade-in\">\n                <div class=\"text-center mb-8\">\n                    <h2 class=\"text-3xl font-bold text-white mb-2\">Match Analysis Results</h2>\n                    <p class=\"text-blue-100\">Here's how well your resume matches the job description</p>\n                </div>\n                \n                <div class=\"grid md:grid-cols-3 gap-6 mb-8\">\n                  <!-- Match Percentage -->\n\t<div class=\"gradient-card rounded-2xl p-6 text-center\">\n  <div class=\"relative w-32 h-32 mx-auto mb-4\">\n    <svg class=\"progress-ring w-32 h-32 absolute top-0 left-0\" viewBox=\"0 0 128 128\">\n      <circle cx=\"64\" cy=\"64\" r=\"56\" stroke=\"rgba(255,255,255,0.2)\" stroke-width=\"8\" fill=\"none\" />\n      <circle id=\"progressCircle\" cx=\"64\" cy=\"64\" r=\"56\" stroke=\"#10b981\" stroke-width=\"8\" fill=\"none\"\n        stroke-dasharray=\"351.86\" stroke-dashoffset=\"123.15\" class=\"progress-ring-circle\" />\n    </svg>\n    <div class=\"absolute inset-0 flex flex-col items-center justify-center space-y-1\">\n      <span id=\"matchPercentage\" class=\"text-2xl font-extrabold text-white leading-tight\">70%</span>\n      <span class=\"text-sm text-white font-medium leading-none\">Match Score</span>\n    </div>\n  </div>\n</div>\n\n                <div id=\"chartModal\" class=\"fixed inset-0 bg-black/60 flex items-center justify-center z-50 hidden\">\n  <div class=\"bg-white rounded-2xl p-6 max-w-md w-full relative\">\n    <button onclick=\"closeChartModal()\" class=\"absolute top-2 right-2 text-gray-600 hover:text-black text-xl font-bold\">&times;</button>\n    <h3 class=\"text-xl font-semibold mb-4 text-center\">Resume vs JD Keywords</h3>\n    <canvas id=\"simpleChart\" class=\"w-full h-64\"></canvas>\n  </div>\n</div>\n\n                    \n                    <!-- Missing Keywords -->\n                    <div class=\"gradient-card rounded-2xl p-6\">\n                        <div class=\"flex items-center gap-3 mb-4\">\n                            <svg class=\"tabler-icon text-red-400\">\n                                <use href=\"#tabler-alert-circle\"></use>\n                            </svg>\n                            <h3 class=\"text-white font-semibold\">Missing Keywords</h3>\n                        </div>\n                        <div class=\"space-y-2\" id=\"missingKeywords\">\n                            <span class=\"inline-block bg-red-500/20 text-red-200 px-3 py-1 rounded-full text-sm\">React</span>\n                            <span class=\"inline-block bg-red-500/20 text-red-200 px-3 py-1 rounded-full text-sm\">TypeScript</span>\n                            <span class=\"inline-block bg-red-500/20 text-red-200 px-3 py-1 rounded-full text-sm\">AWS</span>\n                        </div>\n                    </div>\n                    \n                    <!-- Strengths -->\n                    <div class=\"gradient-card rounded-2xl p-6\">\n                        <div class=\"flex items-center gap-3 mb-4\">\n                            <svg class=\"tabler-icon text-green-400\">\n                                <use href=\"#tabler-check-circle\"></use>\n                            </svg>\n                            <h3 class=\"text-white font-semibold\">Strengths</h3>\n                        </div>\n                        <div class=\"space-y-2\" id=\"strengths\">\n                            <span class=\"inline-block bg-green-500/20 text-green-200 px-3 py-1 rounded-full text-sm\">JavaScript</span>\n                            <span class=\"inline-block bg-green-500/20 text-green-200 px-3 py-1 rounded-full text-sm\">Node.js</span>\n                            <span class=\"inline-block bg-green-500/20 text-green-200 px-3 py-1 rounded-full text-sm\">Git</span>\n                        </div>\n                    </div>\n                </div>\n                \n                <!-- Feedback Summary -->\n                <div class=\"gradient-card rounded-2xl p-6 mb-6\">\n                    <div class=\"flex items-center gap-3 mb-4\">\n                        <svg class=\"tabler-icon text-blue-400\">\n                            <use href=\"#tabler-message-circle\"></use>\n                        </svg>\n                        <h3 class=\"text-white font-semibold\">AI Feedback Summary</h3>\n                    </div>\n                    <p class=\"text-blue-100 leading-relaxed\" id=\"feedbackSummary\">\n                        Your resume shows strong technical skills in JavaScript and Node.js, which align well with the job requirements. However, you're missing some key technologies like React and TypeScript that are specifically mentioned in the job description. Consider highlighting any related experience or adding these skills through projects or training.\n                    </p>\n                </div>\n                \n                <div class=\"flex gap-4\">\n                    <button onclick=\"showStep2()\" class=\"flex-1 glass text-white px-6 py-3 rounded-2xl font-medium hover:bg-white/20 transition-all duration-300 flex items-center justify-center gap-2\">\n                        <svg class=\"tabler-icon\">\n                            <use href=\"#tabler-arrow-left\"></use>\n                        </svg>\n                        Back\n                    </button>\n\t\t\t\t\t<button onclick=\"openChartModal()\" class=\"flex-1 glass text-white px-6 py-3 rounded-2xl font-medium hover:bg-white/20 transition-all duration-300 flex items-center justify-center\">\n  Visualize\n</button>\n\n                    <button onclick=\"showTailoring()\" class=\"flex-1 border-none bg-gradient-to-r from-purple-500 to-pink-600 text-white px-6 py-3 rounded-2xl font-medium hover:from-purple-600 hover:to-pink-700 transition-all duration-300 glow flex items-center justify-center gap-2\">\n                        <svg class=\"tabler-icon\">\n                            <use href=\"#tabler-edit\"></use>\n                        </svg>\n                        Tailor My Resume\n                    </button>\n                </div>\n            </div>\n        </div>\n    </div>\n\n`;\ndocument.getElementById('app').insertAdjacentHTML('beforeend', resultsHTML);\n",
      "status": "[11]<br><span style=\"font-size:8px\">1ms<span></span></span>",
      "output": "",
      "type": "code"
    },
    {
      "code": "<div style=\"text-align:center;margin:10px;margin-left:-20px;margin-right:-20px;\">\n<h1  style=\"color:#555;font-size:30px\"> Render Bar Chart in Modal</h1> \n\n<p> On \"Visualize\" click, a modal opens showing matched vs missing keywords using Chart.js.\n</p>\n</div>",
      "status": "",
      "output": "<div style=\"text-align:center;margin:10px;margin-left:-20px;margin-right:-20px;\">\n<h1 style=\"color:#555;font-size:30px\"> Render Bar Chart in Modal</h1> \n\n<p> On \"Visualize\" click, a modal opens showing matched vs missing keywords using Chart.js.\n</p>\n</div>",
      "type": "html"
    },
    {
      "code": "function openChartModal() {\n  const modal = document.getElementById(\"chartModal\");\n  modal.classList.remove(\"hidden\");\n\n  // Only render once\n  if (!window._chartRendered) {\n    const ctx = document.getElementById('simpleChart')?.getContext('2d');\n    if (!ctx) return;\n\n    new Chart(ctx, {\n      type: 'bar',\n      data: {\n        labels: ['Matched', 'Missing'],\n        datasets: [{\n          label: 'Keywords',\n          data: [\n            window.latestMatchedCount || 14,\n            window.latestMissingCount || 6\n          ],\n          backgroundColor: ['#10b981', '#ef4444'],\n          borderRadius: 8\n        }]\n      },\n      options: {\n        scales: {\n          y: {\n            beginAtZero: true,\n            ticks: { stepSize: 1 }\n          }\n        },\n        plugins: {\n          legend: { display: false }\n        }\n      }\n    });\n\n    window._chartRendered = true;\n  }\n}\n\n\nfunction closeChartModal() {\n  document.getElementById(\"chartModal\").classList.add(\"hidden\");\n}\n",
      "status": "[12]<br><span style=\"font-size:8px\">0ms<span></span></span>",
      "output": "",
      "type": "code"
    },
    {
      "code": "<div style=\"text-align:center;margin:10px;margin-left:-20px;margin-right:-20px;\">\n<h1  style=\"color:#555;font-size:30px\">Resume Tailoring Suggestions</h1> \n\n<p>AI-generated text suggestions to improve resume match. Presented in read-only textarea.\n</p>\n</div>",
      "status": "",
      "output": "<div style=\"text-align:center;margin:10px;margin-left:-20px;margin-right:-20px;\">\n<h1 style=\"color:#555;font-size:30px\">Resume Tailoring Suggestions</h1> \n\n<p>AI-generated text suggestions to improve resume match. Presented in read-only textarea.\n</p>\n</div>",
      "type": "html"
    },
    {
      "code": "const tailoringHTML = `\n    <div id=\"tailoring\" class=\"hidden min-h-screen flex items-center justify-center p-6\">\n        <div class=\"max-w-4xl mx-auto w-full\">\n            <div class=\"glass rounded-3xl p-8 glow fade-in\">\n                <div class=\"text-center mb-8\">\n                    <div class=\"w-16 h-16 mx-auto mb-4 glass rounded-2xl flex items-center justify-center\">\n                        <svg class=\"tabler-icon w-8 h-8 text-white\">\n                            <use href=\"#tabler-wand\"></use>\n                        </svg>\n                    </div>\n                    <h2 class=\"text-3xl font-bold text-white mb-2\">Resume Tailoring Suggestions</h2>\n                    <p class=\"text-blue-100\">AI-generated improvements to boost your match score</p>\n                </div>\n                \n                <div class=\"space-y-6\">\n                    <div class=\"gradient-card rounded-2xl p-6\">\n                        <label class=\"block text-white font-medium mb-3\">Suggested Resume Edits</label>\n                       <textarea \n  id=\"tailoringSuggestions\" \n  readonly\n  class=\"w-full h-64 p-4 rounded-2xl glass text-white border-0 resize-none\"\n>Loading suggestions from AI...</textarea>\n                    </div>\n                    \n                    <div class=\"grid md:grid-cols-3 gap-4\">\n                        <button onclick=\"showResults()\" class=\"glass text-white px-6 py-3 rounded-2xl font-medium hover:bg-white/20 transition-all duration-300 flex items-center justify-center gap-2\">\n                            <svg class=\"tabler-icon\">\n                                <use href=\"#tabler-arrow-left\"></use>\n                            </svg>\n                            Back to Results\n                        </button>\n                        <button onclick=\"restart()\" class=\"border-none bg-gradient-to-r from-green-500 to-teal-600 text-white px-6 py-3 rounded-2xl font-medium hover:from-green-600 hover:to-teal-700 transition-all duration-300 glow-green flex items-center justify-center gap-2\">\n                            <svg class=\"tabler-icon\">\n                                <use href=\"#tabler-refresh\"></use>\n                            </svg>\n                            Start Over\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n`;\ndocument.getElementById('app').insertAdjacentHTML('beforeend', tailoringHTML);",
      "status": "[13]<br><span style=\"font-size:8px\">0ms<span></span></span>",
      "output": "",
      "type": "code"
    },
    {
      "code": "<div style=\"text-align:center;margin:10px;margin-left:-20px;margin-right:-20px;\">\n<h1  style=\"color:#555;font-size:30px\"> Navigation + UI Logic</h1> \n\n<p>Functions to switch between sections (landing, steps, results, tailoring), update progress, and reset state.\n</p>\n</div>",
      "status": "",
      "output": "<div style=\"text-align:center;margin:10px;margin-left:-20px;margin-right:-20px;\">\n<h1 style=\"color:#555;font-size:30px\"> Navigation + UI Logic</h1> \n\n<p>Functions to switch between sections (landing, steps, results, tailoring), update progress, and reset state.\n</p>\n</div>",
      "type": "html"
    },
    {
      "code": "// SECTION CONTROLS\n\nfunction showLanding() {\n  hideAllSections();\n  document.getElementById('landing').classList.remove('hidden');\n}\n\nfunction showStep1() {\n  hideAllSections();\n  document.getElementById('step1').classList.remove('hidden');\n}\n\nfunction showStep2() {\n  const jobDesc = document.getElementById('jobDescription')?.value.trim();\n  if (!jobDesc) {\n    alert('Please enter a job description first!');\n    return;\n  }\n  hideAllSections();\n  document.getElementById('step2').classList.remove('hidden');\n}\n\nfunction showResults() {\n  hideAllSections();\n  document.getElementById('results').classList.remove('hidden');\n}\n\nfunction showTailoring() {\n  hideAllSections();\n  document.getElementById('tailoring').classList.remove('hidden');\n  const suggestionBox = document.getElementById('tailoringSuggestions');\n  if (suggestionBox && window.tailoringSuggestions) {\n    suggestionBox.value = window.tailoringSuggestions;\n  }\n}\n\n\nfunction hideAllSections() {\n  const sections = ['landing', 'step1', 'step2', 'results', 'tailoring'];\n  sections.forEach(id => {\n    const el = document.getElementById(id);\n    if (el) el.classList.add('hidden');\n  });\n}\n\n\nfunction updateResults(percent = 78) {\n  const circle = document.getElementById('progressCircle');\n  const radius = 56;\n  const circumference = 2 * Math.PI * radius;\n\n  if (circle) {\n    circle.setAttribute(\"stroke-dasharray\", `${circumference}`);\n    circle.style.strokeDashoffset = `${circumference - (percent / 100) * circumference}`;\n  }\n\n  const percentLabel = document.getElementById('matchPercentage');\n  if (percentLabel) percentLabel.textContent = `${percent}%`;\n}\n\n\n// FILE UPLOAD HANDLING\n\nfunction setupFileUpload() {\n  const fileInput = document.getElementById('resumeFile');\n  if (!fileInput) return;\n\n  fileInput.addEventListener('change', function (e) {\n    const file = e.target.files[0];\n    if (file) {\n      document.getElementById('fileName').textContent = file.name;\n      document.getElementById('fileInfo').classList.remove('hidden');\n    }\n  });\n}\n\nfunction restart() {\n  document.getElementById('jobDescription').value = '';\n  document.getElementById('resumeFile').value = '';\n  document.getElementById('fileInfo').classList.add('hidden');\n  showLanding();\n}\n\n// INITIALIZATION (after injection)\nsetTimeout(() => {\n  setupFileUpload();\n  showLanding();\n}, 100);\n",
      "status": "[14]<br><span style=\"font-size:8px\">1ms<span></span></span>",
      "output": "429 <br>",
      "type": "code"
    },
    {
      "code": "<div style=\"text-align:center;margin:10px;margin-left:-20px;margin-right:-20px;\">\n<h1  style=\"color:#555;font-size:30px\">Parse PDF to Text</h1> \n\n<p> Uses pdf.js to extract text from uploaded resume. Works fully client-side\n</p>\n</div>",
      "status": "",
      "output": "<div style=\"text-align:center;margin:10px;margin-left:-20px;margin-right:-20px;\">\n<h1 style=\"color:#555;font-size:30px\">Parse PDF to Text</h1> \n\n<p> Uses pdf.js to extract text from uploaded resume. Works fully client-side\n</p>\n</div>",
      "type": "html"
    },
    {
      "code": "async function parsePDF(file) {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onload = async function () {\n      try {\n        const typedArray = new Uint8Array(reader.result);\n        const pdf = await pdfjsLib.getDocument({ data: typedArray }).promise;\n        let text = \"\";\n        for (let i = 1; i <= pdf.numPages; i++) {\n          const page = await pdf.getPage(i);\n          const content = await page.getTextContent();\n          text += content.items.map(item => item.str).join(\" \") + \" \";\n        }\n        resolve(text);\n      } catch (err) {\n        reject(err);\n      }\n    };\n    reader.readAsArrayBuffer(file);\n  });\n}\n",
      "status": "[15]<br><span style=\"font-size:8px\">0ms<span></span></span>",
      "output": "",
      "type": "code"
    },
    {
      "code": "<div style=\"text-align:center;margin:10px;margin-left:-20px;margin-right:-20px;\">\n<h1  style=\"color:#555;font-size:30px\">Run Resume-JD Match</h1> \n\n<p> Handles button click → parses resume → runs AI and fallback match → updates UI and shows results.\n</p>\n</div>",
      "status": "",
      "output": "<div style=\"text-align:center;margin:10px;margin-left:-20px;margin-right:-20px;\">\n<h1 style=\"color:#555;font-size:30px\">Run Resume-JD Match</h1> \n\n<p> Handles button click → parses resume → runs AI and fallback match → updates UI and shows results.\n</p>\n</div>",
      "type": "html"
    },
    {
      "code": "async function analyzeMatch() {\n  const jobDesc = document.getElementById('jobDescription')?.value.trim();\n  const resumeFile = document.getElementById('resumeFile')?.files[0];\n\n  if (!jobDesc || !resumeFile) {\n    alert('Provide both JD and resume');\n    return;\n  }\n\n  const btn = document.getElementById('analyzeBtn');\n  btn.innerHTML = `<svg class=\"tabler-icon animate-spin\"><use href=\"#tabler-refresh\"></use></svg> Analyzing...`;\n  btn.disabled = true;\n\n  try {\n    const resumeText = await parsePDF(resumeFile);\n\n    const aiResult = await fetchGeminiInsights(resumeText, jobDesc);\n\n    // computing fallback as backup\n    const fallback = localFallbackMatch(resumeText, jobDesc);\n\n    const result = aiResult || fallback;\n\n    updateUIWithResults(result.score, result.strengths, result.missing, result.feedback);\n\n    window.tailoringSuggestions = result.tailoring || result.feedback || \"No suggestions found.\";\n\n    showResults();\n  } catch (err) {\n    alert(\"Analysis failed.\");\n    console.error(err);\n  } finally {\n    btn.innerHTML = `Analyze Match`;\n    btn.disabled = false;\n  }\n}\n",
      "status": "[16]<br><span style=\"font-size:8px\">0ms<span></span></span>",
      "output": "",
      "type": "code"
    },
    {
      "code": "<div style=\"text-align:center;margin:10px;margin-left:-20px;margin-right:-20px;\">\n<h1  style=\"color:#555;font-size:30px\">AI Matching with Gemini 2.0 Flash</h1> \n\n<p>Calls Gemini API with resume + JD, receives structured JSON with score, strengths, missing, feedback.\n</p>\n</div>",
      "status": "",
      "output": "<div style=\"text-align:center;margin:10px;margin-left:-20px;margin-right:-20px;\">\n<h1 style=\"color:#555;font-size:30px\">AI Matching with Gemini 2.0 Flash</h1> \n\n<p>Calls Gemini API with resume + JD, receives structured JSON with score, strengths, missing, feedback.\n</p>\n</div>",
      "type": "html"
    },
    {
      "code": "async function fetchGeminiInsights(resumeText, jdText) {\nconst apiKey = scrib.getSecret('GEMINI_KEY');\nconst prompt = `\nCompare the following resume and job description and answer in strict JSON format like:\n{\n  \"score\": 85,\n  \"strengths\": [\"JavaScript\", \"Node.js\"],\n  \"missing\": [\"React\", \"AWS\"],\n  \"feedback\": \"Strong backend experience. Missing cloud and frontend frameworks.\",\n  \"tailoring\": \"• Add React to your resume...\\\\n• Mention AWS or S3 experience...\"\n}\n\nResume: \"\"\"${resumeText.slice(0, 4000)}\"\"\"\nJob Description: \"\"\"${jdText.slice(0, 4000)}\"\"\"\n`;\n\n\n  try {\n    const res = await fetch(`https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent?key=${apiKey}`, {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        contents: [{ parts: [{ text: prompt }] }]\n      })\n    });\n\n    const data = await res.json();\n    const text = data?.candidates?.[0]?.content?.parts?.[0]?.text;\n    const jsonMatch = text?.match(/\\{[\\s\\S]*\\}/);\n    if (!jsonMatch) throw new Error(\"Invalid JSON response from LLM\");\n\n    return JSON.parse(jsonMatch[0]);\n  } catch (err) {\n    console.warn(\"Gemini failed. Falling back to local match.\", err);\n    return null;\n  }\n}\n",
      "status": "[17]<br><span style=\"font-size:8px\">0ms<span></span></span>",
      "output": "",
      "type": "code"
    }
  ],
  "source": "https://github.com/gopi-suvanam/scribbler",
  "run_on_load": false
}